// Code generated by mockery v1.0.0. DO NOT EDIT.

package v1pb

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockUsersServer is an autogenerated mock type for the UsersServer type
type MockUsersServer struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0, _a1
func (_m *MockUsersServer) Create(_a0 context.Context, _a1 *CreateRequest) (*User, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *User
	if rf, ok := ret.Get(0).(func(context.Context, *CreateRequest) *User); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *CreateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0, _a1
func (_m *MockUsersServer) Get(_a0 context.Context, _a1 *GetRequest) (*User, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *User
	if rf, ok := ret.Get(0).(func(context.Context, *GetRequest) *User); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
