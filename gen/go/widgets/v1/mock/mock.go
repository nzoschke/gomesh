// Code generated by MockGen. DO NOT EDIT.
// Source: gen/go//widgets/v1/widgets.pb.go

// Package mock_v1pb is a generated GoMock package.
package mock_v1pb

import (
	x "."
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockWidgetsClient is a mock of WidgetsClient interface
type MockWidgetsClient struct {
	ctrl     *gomock.Controller
	recorder *MockWidgetsClientMockRecorder
}

// MockWidgetsClientMockRecorder is the mock recorder for MockWidgetsClient
type MockWidgetsClientMockRecorder struct {
	mock *MockWidgetsClient
}

// NewMockWidgetsClient creates a new mock instance
func NewMockWidgetsClient(ctrl *gomock.Controller) *MockWidgetsClient {
	mock := &MockWidgetsClient{ctrl: ctrl}
	mock.recorder = &MockWidgetsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWidgetsClient) EXPECT() *MockWidgetsClientMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *MockWidgetsClient) List(ctx context.Context, in *x.ListRequest, opts ...grpc.CallOption) (*x.ListResponse, error) {
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "List", varargs...)
	ret0, _ := ret[0].(*x.ListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockWidgetsClientMockRecorder) List(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockWidgetsClient)(nil).List), varargs...)
}

// MockWidgetsServer is a mock of WidgetsServer interface
type MockWidgetsServer struct {
	ctrl     *gomock.Controller
	recorder *MockWidgetsServerMockRecorder
}

// MockWidgetsServerMockRecorder is the mock recorder for MockWidgetsServer
type MockWidgetsServerMockRecorder struct {
	mock *MockWidgetsServer
}

// NewMockWidgetsServer creates a new mock instance
func NewMockWidgetsServer(ctrl *gomock.Controller) *MockWidgetsServer {
	mock := &MockWidgetsServer{ctrl: ctrl}
	mock.recorder = &MockWidgetsServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWidgetsServer) EXPECT() *MockWidgetsServerMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *MockWidgetsServer) List(arg0 context.Context, arg1 *x.ListRequest) (*x.ListResponse, error) {
	ret := m.ctrl.Call(m, "List", arg0, arg1)
	ret0, _ := ret[0].(*x.ListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockWidgetsServerMockRecorder) List(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockWidgetsServer)(nil).List), arg0, arg1)
}
