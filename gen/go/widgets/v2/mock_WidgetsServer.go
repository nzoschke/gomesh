// Code generated by mockery v1.0.0. DO NOT EDIT.

package v2pb

import context "context"
import empty "github.com/golang/protobuf/ptypes/empty"
import mock "github.com/stretchr/testify/mock"

// MockWidgetsServer is an autogenerated mock type for the WidgetsServer type
type MockWidgetsServer struct {
	mock.Mock
}

// BatchGet provides a mock function with given fields: _a0, _a1
func (_m *MockWidgetsServer) BatchGet(_a0 context.Context, _a1 *BatchGetRequest) (*BatchGetResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *BatchGetResponse
	if rf, ok := ret.Get(0).(func(context.Context, *BatchGetRequest) *BatchGetResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*BatchGetResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *BatchGetRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Create provides a mock function with given fields: _a0, _a1
func (_m *MockWidgetsServer) Create(_a0 context.Context, _a1 *CreateRequest) (*Widget, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *Widget
	if rf, ok := ret.Get(0).(func(context.Context, *CreateRequest) *Widget); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Widget)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *CreateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: _a0, _a1
func (_m *MockWidgetsServer) Delete(_a0 context.Context, _a1 *DeleteRequest) (*empty.Empty, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *empty.Empty
	if rf, ok := ret.Get(0).(func(context.Context, *DeleteRequest) *empty.Empty); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*empty.Empty)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *DeleteRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0, _a1
func (_m *MockWidgetsServer) Get(_a0 context.Context, _a1 *GetRequest) (*Widget, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *Widget
	if rf, ok := ret.Get(0).(func(context.Context, *GetRequest) *Widget); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Widget)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: _a0, _a1
func (_m *MockWidgetsServer) List(_a0 context.Context, _a1 *ListRequest) (*ListResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *ListResponse
	if rf, ok := ret.Get(0).(func(context.Context, *ListRequest) *ListResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ListResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ListRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Update provides a mock function with given fields: _a0, _a1
func (_m *MockWidgetsServer) Update(_a0 context.Context, _a1 *UpdateRequest) (*Widget, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *Widget
	if rf, ok := ret.Get(0).(func(context.Context, *UpdateRequest) *Widget); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Widget)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *UpdateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
